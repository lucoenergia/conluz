plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.6'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.lucoenergia'
version = "1.0.44"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.liquibase:liquibase-core:4.33.0'
    implementation 'org.influxdb:influxdb-java:2.25'
    implementation 'com.influxdb:influxdb3-java:1.4.0'
    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.apache.commons:commons-lang3:3.18.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    implementation 'com.opencsv:opencsv:5.9'

    implementation "org.apache.commons:commons-compress:1.26.0"
    implementation "org.apache.commons:commons-collections4:4.4"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:postgresql:1.18.3'
    testImplementation "org.testcontainers:influxdb:1.19.1"
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.4.0'
}

tasks.named('test') {
    useJUnitPlatform()
    // Add JVM arguments for Apache Arrow (required by InfluxDB 3 client)
    jvmArgs = [
            '--add-opens=java.base/java.nio=ALL-UNNAMED',
            '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED'
    ]
}

jar {
    // We only want to generate the executable jar (which includes dependencies), then we disable the Jar task
    enabled = false
}
